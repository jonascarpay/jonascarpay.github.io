<rss version="2.0">
	<channel>
		<title>jonas's blog</title>
		<link>https://jonascarpay.com</link>
		<description>jonas's blog</description>
		<item>
			<title>A Comprehensive Guide to End-to-End-Declarative Deployment
with Terraform and Nix</title>
			<link>https://jonascarpay.com/posts/2022-09-19-declarative-deployment.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2022-09-19-declarative-deployment.html</guid>
			<description>
				Express your entire production pipeline in code; build, provision,
    and deploy to EC2 with a single command.
			</description>
		</item>
		<item>
			<title>Calligraphy tutorial</title>
			<link>https://jonascarpay.com/posts/2022-04-26-calligraphy-tutorial.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2022-04-26-calligraphy-tutorial.html</guid>
			<description>
				Tutorial for calligraphy, a Haskell source code visualizer.
			</description>
		</item>
		<item>
			<title>Capturing non-determinism by salting derivations</title>
			<link>https://jonascarpay.com/posts/2021-12-01-salt.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2021-12-01-salt.html</guid>
			<description>
				Adding a salt allows you to capture non-reproducibility, and make
    poorly-behaved derivations nicer to work with.
			</description>
		</item>
		<item>
			<title>Algebraic data types and pattern matching in Nix</title>
			<link>https://jonascarpay.com/posts/2021-11-08-nix-adts.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2021-11-08-nix-adts.html</guid>
			<description>
				Three ways of implementing algebraic data types and pattern matching
    in Nix, and when to choose which.
			</description>
		</item>
		<item>
			<title>Managing secrets with agenix</title>
			<link>https://jonascarpay.com/posts/2021-07-27-agenix.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2021-07-27-agenix.html</guid>
			<description>
				A practical guide on securely managing and deploying secrets with
    agenix
			</description>
		</item>
		<item>
			<title>Parsing a programming language</title>
			<link>https://jonascarpay.com/posts/2021-05-16-parsing-programming-language.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2021-05-16-parsing-programming-language.html</guid>
			<description>
				I recently rewrote the parser for my programming language â€“ twice.
    Here are some of the things I learned along the way.
			</description>
		</item>
		<item>
			<title></title>
			<link>https://jonascarpay.com/posts/2021-01-28-haskell-project-template.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2021-01-28-haskell-project-template.html</guid>
			<description>
				
			</description>
		</item>
		<item>
			<title>Monoidal Puzzle Solving</title>
			<link>https://jonascarpay.com/posts/2020-05-26-solver.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2020-05-26-solver.html</guid>
			<description>
				Solve Sudokus and other puzzles by monoidally composing rules
			</description>
		</item>
		<item>
			<title>The Descriptor</title>
			<link>https://jonascarpay.com/posts/2020-05-10-descriptor.html</link>
			<guid isPermaLink="false">https://jonascarpay.com/posts/2020-05-10-descriptor.html</guid>
			<description>
				Add metadata to record fields, work with higher-kinded data without
    resorting to Generics and Template Haskell, write safe and efficient
    FFI code
			</description>
		</item>
	</channel>
</rss>
